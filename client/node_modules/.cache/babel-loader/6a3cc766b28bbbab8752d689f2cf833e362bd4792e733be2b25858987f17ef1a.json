{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\radui\\\\OneDrive\\\\Desktop\\\\service-app\\\\client\\\\src\\\\pages\\\\DashBoard\\\\Mechanic\\\\mechanic.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './mechanic.css';\nimport Sidebar from '../Sidebar/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Mechanic = ({\n  user\n}) => {\n  _s();\n  const [cars, setCars] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/dashboard/mechanic`).then(response => response.json()).then(data => setCars(data));\n  }, []);\n  const changeStatus = (carId, newStatus) => {\n    fetch(`http://localhost:5000/dashboard/mechanic/${carId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: newStatus\n      })\n    }).then(response => response.json()).then(data => {\n      setCars(cars.map(car => car.id === carId ? {\n        ...car,\n        status: newStatus\n      } : car));\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), cars.map(car => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: car.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: car.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeStatus(car.id, 'newStatus'),\n        children: \"Change Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)]\n    }, car.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Mechanic, \"/EQt6wAxOgtQYDavlJ/SWb5B/tI=\");\n_c = Mechanic;\nexport default Mechanic;\nvar _c;\n$RefreshReg$(_c, \"Mechanic\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","jsxDEV","_jsxDEV","Mechanic","user","_s","cars","setCars","fetch","then","response","json","data","changeStatus","carId","newStatus","method","headers","body","JSON","stringify","status","map","car","id","children","fileName","_jsxFileName","lineNumber","columnNumber","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/radui/OneDrive/Desktop/service-app/client/src/pages/DashBoard/Mechanic/mechanic.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './mechanic.css';\r\nimport Sidebar from '../Sidebar/sidebar';\r\n\r\nconst Mechanic = ({ user }) => {\r\n  const [cars, setCars] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/dashboard/mechanic`)\r\n      .then(response => response.json())\r\n      .then(data => setCars(data));\r\n  }, []);\r\n\r\n  const changeStatus = (carId, newStatus) => {\r\n    fetch(`http://localhost:5000/dashboard/mechanic/${carId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ status: newStatus }),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      setCars(cars.map(car => car.id === carId ? {...car, status: newStatus} : car));\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Sidebar user={user} />\r\n      {cars.map(car => (\r\n        <div key={car.id}>\r\n          <p>{car.name}</p>\r\n          <p>{car.status}</p>\r\n          <button onClick={() => changeStatus(car.id, 'newStatus')}>Change Status</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mechanic;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,gBAAgB;AACvB,OAAOC,OAAO,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdS,KAAK,CAAE,0CAAyC,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,OAAO,CAACK,IAAI,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK;IACzCP,KAAK,CAAE,4CAA2CM,KAAM,EAAC,EAAE;MACzDE,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEN;MAAU,CAAC;IAC5C,CAAC,CAAC,CACDN,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZL,OAAO,CAACD,IAAI,CAACgB,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACC,EAAE,KAAKV,KAAK,GAAG;QAAC,GAAGS,GAAG;QAAEF,MAAM,EAAEN;MAAS,CAAC,GAAGQ,GAAG,CAAC,CAAC;IAChF,CAAC,CAAC;EACJ,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA,CAACF,OAAO;MAACI,IAAI,EAAEA;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACtBvB,IAAI,CAACgB,GAAG,CAACC,GAAG,iBACXrB,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,EAAIF,GAAG,CAACO;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjB3B,OAAA;QAAAuB,QAAA,EAAIF,GAAG,CAACF;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnB3B,OAAA;QAAQ6B,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACU,GAAG,CAACC,EAAE,EAAE,WAAW,CAAE;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAHxEN,GAAG,CAACC,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CAnCIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAqCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}